{
   "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "location": {
         "type": "string",
         "defaultValue": "[resourceGroup().location]",
         "metadata": {
            "description": "Location for the resources."
         }
      },
      "adminPassword": {
         "type": "securestring",
         "metadata": {
            "description": "The admin password of the VM"
         }
      },
      "adminUsername": {
         "type": "string",
         "defaultValue": "MCSAzLocalWinAdmin",
         "metadata": {
            "description": "The admin name of the VM"
         }
      },
      "diskType": {
         "type": "string",
         "defaultValue": "StandardSSD_LRS",
         "allowedValues": [
            "StandardSSD_LRS",
            "Standard_LRS",
            "Premium_LRS"
         ],
         "metadata": {
            "description": "The Storage type of the data Disks"
         }
      },
      "virtualMachineSize": {
         "type": "string",
         "defaultValue": "Standard_D2_V2",
         "metadata": {
            "description": "The virtual machine size. Enter a Premium capable VM size if DiskType is entered as Premium_LRS"
         }
      },
      "osVersion": {
         "type": "string",
         "defaultValue": "18.04-LTS",
         "allowedValues": [
            "16.04-LTS",
            "18.04-LTS",
            "18.10",
            "18.10-DAILY",
            "19.04-DAILY"
         ],
         "metadata": {
            "description": "The Ubuntu Server version for the VM."
         }
      },
      "vmCount": {
         "type": "int",
         "defaultValue": 1,
         "metadata": {
            "description": "Number of VMs"
         }
      },
      "vmSuffix": {
         "type": "string",
         "metadata": {
            "description": "Short description (max. 6 characters) of VM usage (e.g. SQL, FILE, ...). Will be used as a postfix in the VM name. Has to be unique within the Resource Group."
         }
      },
      "dataDisksCount": {
         "type": "int",
         "defaultValue": 0,
         "metadata": {
            "description": "Number of additional data disks per VM"
         }
      },
      "dataDiskSize": {
         "type": "int",
         "defaultValue": 128,
         "metadata": {
            "description": "Size per additional data disk in GB."
         }
      }
   },
   "variables": {
      "rgName": "[resourceGroup().name]",
      "mcsazRGInfo": "[split(variables('rgName'),'-')]",
      "mcsazMgmtRG": "[concat('MCSAz-',variables('mcsazRGInfo')[0],'-',variables('mcsazRGInfo')[1],'-',variables('mcsazLocation'),'-','RG-MGMT')]",
      "mcsazLocation": "[variables('mcsazRGInfo')[2]]",
      "mcsazRequestID": "[variables('mcsazRGInfo')[4]]",
      "virtualMachineBaseName": "[toUpper(concat(variables('mcsazRequestID'), parameters('vmSuffix')))]",
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "virtualNetworkName": "[concat('MCSAz-',variables('mcsazRGInfo')[0],'-',variables('mcsazRGInfo')[1],'-',variables('mcsazLocation'),'-VN-01')]",
      "vnetID": "[resourceId(variables('mcsazMgmtRG'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/' , variables('rgName'))]",
      "adAvailabilitySetName": "[concat(variables('virtualMachineBaseName'),'-AVSet')]",
      "copy": [
         {
            "name": "copyVMnames",
            "count": "[parameters('vmcount')]",
            "input": {
               "name": "[concat(variables('virtualMachineBaseName'), copyIndex('copyVMnames', 1))]"
            }
         },
         {
            "name": "dataDisks",
            "count": "[if(equals(parameters('dataDisksCount'),0),1, parameters('dataDisksCount'))]",
            "input": {
               "lun": "[copyIndex('dataDisks')]",
               "createOption": "Empty",
               "diskSizeGB": "[parameters('dataDiskSize')]",
               "managedDisk": {
                  "storageAccountType": "[parameters('diskType')]"
               }
            }
         }
      ]
   },
   "resources": [
      {
         "apiVersion": "2017-03-30",
         "type": "Microsoft.Compute/availabilitySets",
         "location": "[parameters('location')]",
         "name": "[variables('adAvailabilitySetName')]",
         "comments": "Availability set to ensure high availability",
         "properties": {
            "PlatformUpdateDomainCount": 20,
            "PlatformFaultDomainCount": 2
         },
         "sku": {
            "name": "Aligned"
         }
      },
      {
         "apiVersion": "2018-02-01",
         "type": "Microsoft.Network/networkInterfaces",
         "name": "[concat(variables('virtualMachineBaseName'),copyIndex(1),'-NIC')]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "nicCopy",
            "count": "[parameters('vmcount')]"
         },
         "dependsOn": [],
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "privateIPAllocationMethod": "Dynamic",
                     "subnet": {
                        "id": "[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion": "2018-06-01",
         "type": "Microsoft.Compute/virtualMachines",
         "name": "[concat(variables('virtualMachineBaseName'),copyIndex(1))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "vmCopy",
            "count": "[parameters('vmcount')]"
         },
         "dependsOn": [
            "[concat(variables('virtualMachineBaseName'),copyIndex(1),'-Nic')]",
            "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "[parameters('virtualMachineSize')]"
            },
            "availabilitySet": {
               "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
            },
            "osProfile": {
               "computername": "[concat(variables('virtualMachineBaseName'),copyIndex(1))]",
               "adminUsername": "[parameters('adminUsername')]",
               "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
               "osDisk": {
                  "osType": "Linux",
                  "name": "[concat(variables('virtualMachineBaseName'), copyIndex(1),'-OSDisk')]",
                  "caching": "ReadWrite",
                  "createOption": "FromImage",
                  "managedDisk": {
                     "storageAccountType": "[parameters('diskType')]"
                  },
                  "diskSizeGB": 128
               },
               "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('osVersion')]",
                  "version": "latest"
               },
               "dataDisks": "[if(equals(parameters('dataDisksCount'),0),json('null'),variables('dataDisks'))]"
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachineBaseName'),copyIndex(1),'-NIC'))]"
                  }
               ]
            }
         }
      }
   ],
   "outputs": {
      "vnetID": {
         "type": "string",
         "value": "[variables('vnetID')]"
      },
      "subnetRefID": {
         "type": "string",
         "value": "[variables('subnetRef')]"
      },
      "virtualNetworkName": {
         "type": "string",
         "value": "[variables('virtualNetworkName')]"
      },
      "virtualMachineBaseName": {
         "type": "string",
         "value": "[variables('virtualMachineBaseName')]"
      },
      "mcsazRequestID": {
         "type": "string",
         "value": "[variables('mcsazRequestID')]"
      },
      "mcsazLocation": {
         "type": "string",
         "value": "[variables('mcsazLocation')]"
      },
      "mcsazMgmtRG": {
         "type": "string",
         "value": "[variables('mcsazMgmtRG')]"
      },
      "vmNames": {
         "type": "array",
         "value": "[variables('copyVMnames')]"
      }
   }
}
